<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.BaseDictDao">

	<select id="queryObject" resultType="io.renren.entity.BaseDictEntity">
		select * from base_dict where dict_id = #{value}
	</select>
	
	<select id="queryById" resultType="io.renren.entity.BaseDictEntity">
		select * from base_dict where id = #{value}
	</select>
	
	<select id="queryList" resultType="io.renren.entity.BaseDictEntity">
		select * from base_dict 
		 ORDER BY  dict_type_code , dict_sort 
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from base_dict 
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.BaseDictEntity">
		insert into base_dict
		(
			`dict_id`, 
			`dict_type_code`, 
			`dict_type_name`, 
			`dict_item_name`, 
			`dict_item_value`, 
			`dict_item_code`, 
			`dict_sort`, 
			`dict_enable`, 
			`dict_memo`
		)
		values
		(
			#{dictId}, 
			#{dictTypeCode}, 
			#{dictTypeName}, 
			#{dictItemName}, 
			#{dictItemValue}, 
			#{dictItemCode}, 
			#{dictSort}, 
			#{dictEnable}, 
			#{dictMemo}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.BaseDictEntity">
		update base_dict 
		<set>
			<if test="dictTypeCode != null">`dict_type_code` = #{dictTypeCode}, </if>
			<if test="dictTypeName != null">`dict_type_name` = #{dictTypeName}, </if>
			<if test="dictItemName != null">`dict_item_name` = #{dictItemName}, </if>
			<if test="dictItemValue != null">`dict_item_value` = #{dictItemValue}, </if>
			<if test="dictItemCode != null">`dict_item_code` = #{dictItemCode}, </if>
			<if test="dictSort != null">`dict_sort` = #{dictSort}, </if>
			<if test="dictEnable != null">`dict_enable` = #{dictEnable}, </if>
			<if test="dictMemo != null">`dict_memo` = #{dictMemo}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from base_dict where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from base_dict where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>